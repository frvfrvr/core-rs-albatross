name: Build + Test

on:
  - push
  - pull_request

jobs:

  rustfmt:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: cargo-${{ hashFiles('**/Cargo.toml') }}
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
        components: rustfmt
    - uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

  check:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: cargo-${{ hashFiles('**/Cargo.toml') }}
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: check
        args: --release --all-features

  test:
    runs-on: ubuntu-20.04
    needs: check

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: cargo-${{ hashFiles('**/Cargo.toml') }}
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features
      # Add flags for gcov
      env:
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
        RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
    - id: coverage
      name: Generate coverage  report
      uses: actions-rs/grcov@v0.1
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: ${{ steps.coverage.outputs.report }}
        fail_ci_if_error: false
        flags: unittests
        name: Nimiq code coverage
        verbose: true

  clippy:
    runs-on: ubuntu-20.04
    needs: check

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: cargo-${{ hashFiles('**/Cargo.toml') }}
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
        components: clippy
    - uses: actions-rs/clippy-check@v1
      with:
        name: Clippy Report
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --release --all-features
